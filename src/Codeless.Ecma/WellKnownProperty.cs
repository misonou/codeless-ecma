namespace Codeless.Ecma {
  public static class WellKnownProperty {
    public static readonly EcmaPropertyKey Length = new EcmaPropertyKey("length");
    public static readonly EcmaPropertyKey Name = new EcmaPropertyKey("name");
    public static readonly EcmaPropertyKey Arguments = new EcmaPropertyKey("arguments");
    public static readonly EcmaPropertyKey Caller = new EcmaPropertyKey("caller");
    public static readonly EcmaPropertyKey Constructor = new EcmaPropertyKey("constructor");
    public static readonly EcmaPropertyKey Prototype = new EcmaPropertyKey("prototype");
    public static readonly EcmaPropertyKey ToString = new EcmaPropertyKey("toString");
    public static readonly EcmaPropertyKey ValueOf = new EcmaPropertyKey("valueOf");
    public static readonly EcmaPropertyKey Configurable = new EcmaPropertyKey("configurable");
    public static readonly EcmaPropertyKey Enumerable = new EcmaPropertyKey("enumerable");
    public static readonly EcmaPropertyKey Writable = new EcmaPropertyKey("writable");
    public static readonly EcmaPropertyKey Value = new EcmaPropertyKey("value");
    public static readonly EcmaPropertyKey Get = new EcmaPropertyKey("get");
    public static readonly EcmaPropertyKey Set = new EcmaPropertyKey("set");
    public static readonly EcmaPropertyKey GetPrototypeOf = new EcmaPropertyKey("getPrototypeOf");
    public static readonly EcmaPropertyKey SetPrototypeOf = new EcmaPropertyKey("setPrototypeOf");
    public static readonly EcmaPropertyKey IsExtensible = new EcmaPropertyKey("isExtensible");
    public static readonly EcmaPropertyKey PreventExtensions = new EcmaPropertyKey("preventExtensions");
    public static readonly EcmaPropertyKey GetOwnPropertyDescriptor = new EcmaPropertyKey("getOwnPropertyDescriptor");
    public static readonly EcmaPropertyKey DefineProperty = new EcmaPropertyKey("defineProperty");
    public static readonly EcmaPropertyKey Has = new EcmaPropertyKey("has");
    public static readonly EcmaPropertyKey DeleteProperty = new EcmaPropertyKey("deleteProperty");
    public static readonly EcmaPropertyKey OwnKeys = new EcmaPropertyKey("ownKeys");
    public static readonly EcmaPropertyKey Apply = new EcmaPropertyKey("apply");
    public static readonly EcmaPropertyKey Construct = new EcmaPropertyKey("construct");
    public static readonly EcmaPropertyKey LastIndex = new EcmaPropertyKey("lastIndex");
    public static readonly EcmaPropertyKey Message = new EcmaPropertyKey("message");
    public static readonly EcmaPropertyKey ToJSON = new EcmaPropertyKey("toJSON");
    public static readonly EcmaPropertyKey Callee = new EcmaPropertyKey("callee");
    public static readonly EcmaPropertyKey Add = new EcmaPropertyKey("add");
    public static readonly EcmaPropertyKey Groups = new EcmaPropertyKey("groups");
    public static readonly EcmaPropertyKey Index = new EcmaPropertyKey("index");
    public static readonly EcmaPropertyKey Exec = new EcmaPropertyKey("exec");
    public static readonly EcmaPropertyKey Next = new EcmaPropertyKey("next");
    public static readonly EcmaPropertyKey Done = new EcmaPropertyKey("done");
    public static readonly EcmaPropertyKey Return = new EcmaPropertyKey("return");
    public static readonly EcmaPropertyKey Global = new EcmaPropertyKey("global");
    public static readonly EcmaPropertyKey IgnoreCase = new EcmaPropertyKey("ignoreCase");
    public static readonly EcmaPropertyKey Multiline = new EcmaPropertyKey("multiline");
    public static readonly EcmaPropertyKey Unicode = new EcmaPropertyKey("unicode");
    public static readonly EcmaPropertyKey Sticky = new EcmaPropertyKey("sticky");
    public static readonly EcmaPropertyKey DotAll = new EcmaPropertyKey("dotAll");
    public static readonly EcmaPropertyKey Flags = new EcmaPropertyKey("flags");
    public static readonly EcmaPropertyKey Source = new EcmaPropertyKey("source");
    public static readonly EcmaPropertyKey Input = new EcmaPropertyKey("input");
  }
}
